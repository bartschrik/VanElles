! function (e) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], e) : "undefined" != typeof exports ? module.exports = e(require("jquery")) : e(jQuery)
}(function (e) {
    "use strict";
    var i = window.Slick || {};
    i = function () {
        function t(t, s) {
            var n, l, r, o = this;
            if (o.defaults = {
                    accessibility: !0,
                    adaptiveHeight: !1,
                    appendArrows: e(t),
                    appendDots: e(t),
                    arrows: !0,
                    asNavFor: null,
                    prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="previous">Previous</button>',
                    nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="next">Next</button>',
                    autoplay: !1,
                    autoplaySpeed: 3e3,
                    centerMode: !1,
                    centerPadding: "50px",
                    cssEase: "ease",
                    customPaging: function (e, i) {
                        return '<button type="button" data-role="none"><div></div></button>'
                    },
                    dots: !1,
                    dotsClass: "slick-dots",
                    draggable: !0,
                    easing: "linear",
                    edgeFriction: .35,
                    fade: !1,
                    focusOnSelect: !1,
                    infinite: !0,
                    initialSlide: 0,
                    lazyLoad: "ondemand",
                    mobileFirst: !1,
                    pauseOnHover: !0,
                    pauseOnDotsHover: !1,
                    respondTo: "window",
                    responsive: null,
                    rows: 1,
                    rtl: !1,
                    slide: "",
                    slidesPerRow: 1,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    speed: 500,
                    swipe: !0,
                    swipeToSlide: !1,
                    touchMove: !0,
                    touchThreshold: 5,
                    useCSS: !0,
                    variableWidth: !1,
                    vertical: !1,
                    verticalSwiping: !1,
                    waitForAnimate: !0
                }, o.initials = {
                    animating: !1,
                    dragging: !1,
                    autoPlayTimer: null,
                    currentDirection: 0,
                    currentLeft: null,
                    currentSlide: 0,
                    direction: 1,
                    $dots: null,
                    listWidth: null,
                    listHeight: null,
                    loadIndex: 0,
                    $nextArrow: null,
                    $prevArrow: null,
                    slideCount: null,
                    slideWidth: null,
                    $slideTrack: null,
                    $slides: null,
                    sliding: !1,
                    slideOffset: 0,
                    swipeLeft: null,
                    $list: null,
                    touchObject: {},
                    transformsEnabled: !1
                }, e.extend(o, o.initials), o.activeBreakpoint = null, o.animType = null, o.animProp = null, o.breakpoints = [], o.breakpointSettings = [], o.cssTransitions = !1, o.hidden = "hidden", o.paused = !1, o.positionProp = null, o.respondTo = null, o.rowCount = 1, o.shouldClick = !0, o.$slider = e(t), o.$slidesCache = null, o.transformType = null, o.transitionType = null, o.visibilityChange = "visibilitychange", o.windowWidth = 0, o.windowTimer = null, n = e(t).data("slick") || {}, o.options = e.extend({}, o.defaults, n, s), o.currentSlide = o.options.initialSlide, o.originalSettings = o.options, l = o.options.responsive || null, l && l.length > -1) {
                o.respondTo = o.options.respondTo || "window";
                for (r in l) l.hasOwnProperty(r) && (o.breakpoints.push(l[r].breakpoint), o.breakpointSettings[l[r].breakpoint] = l[r].settings);
                o.breakpoints.sort(function (e, i) {
                    return o.options.mobileFirst === !0 ? e - i : i - e
                })
            }
            "undefined" != typeof document.mozHidden ? (o.hidden = "mozHidden", o.visibilityChange = "mozvisibilitychange") : "undefined" != typeof document.msHidden ? (o.hidden = "msHidden", o.visibilityChange = "msvisibilitychange") : "undefined" != typeof document.webkitHidden && (o.hidden = "webkitHidden", o.visibilityChange = "webkitvisibilitychange"), o.autoPlay = e.proxy(o.autoPlay, o), o.autoPlayClear = e.proxy(o.autoPlayClear, o), o.changeSlide = e.proxy(o.changeSlide, o), o.clickHandler = e.proxy(o.clickHandler, o), o.selectHandler = e.proxy(o.selectHandler, o), o.setPosition = e.proxy(o.setPosition, o), o.swipeHandler = e.proxy(o.swipeHandler, o), o.dragHandler = e.proxy(o.dragHandler, o), o.keyHandler = e.proxy(o.keyHandler, o), o.autoPlayIterator = e.proxy(o.autoPlayIterator, o), o.instanceUid = i++, o.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, o.init(), o.checkResponsive(!0)
        }
        var i = 0;
        return t
    }(), i.prototype.addSlide = i.prototype.slickAdd = function (i, t, s) {
        var o = this;
        if ("boolean" == typeof t) s = t, t = null;
        else if (0 > t || t >= o.slideCount) return !1;
        o.unload(), "number" == typeof t ? 0 === t && 0 === o.$slides.length ? e(i).appendTo(o.$slideTrack) : s ? e(i).insertBefore(o.$slides.eq(t)) : e(i).insertAfter(o.$slides.eq(t)) : s === !0 ? e(i).prependTo(o.$slideTrack) : e(i).appendTo(o.$slideTrack), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slides.each(function (i, t) {
            e(t).attr("data-slick-index", i)
        }), o.$slidesCache = o.$slides, o.reinit()
    }, i.prototype.animateHeight = function () {
        var e = this;
        if (1 === e.options.slidesToShow && e.options.adaptiveHeight === !0 && e.options.vertical === !1) {
            var i = e.$slides.eq(e.currentSlide).outerHeight(!0);
            e.$list.animate({
                height: i
            }, e.options.speed)
        }
    }, i.prototype.animateSlide = function (i, t) {
        var s = {},
            o = this;
        o.animateHeight(), o.options.rtl === !0 && o.options.vertical === !1 && (i = -i), o.transformsEnabled === !1 ? o.options.vertical === !1 ? o.$slideTrack.animate({
            left: i
        }, o.options.speed, o.options.easing, t) : o.$slideTrack.animate({
            top: i
        }, o.options.speed, o.options.easing, t) : o.cssTransitions === !1 ? (o.options.rtl === !0 && (o.currentLeft = -o.currentLeft), e({
            animStart: o.currentLeft
        }).animate({
            animStart: i
        }, {
            duration: o.options.speed,
            easing: o.options.easing,
            step: function (e) {
                e = Math.ceil(e), o.options.vertical === !1 ? (s[o.animType] = "translate(" + e + "px, 0px)", o.$slideTrack.css(s)) : (s[o.animType] = "translate(0px," + e + "px)", o.$slideTrack.css(s))
            },
            complete: function () {
                t && t.call()
            }
        })) : (o.applyTransition(), i = Math.ceil(i), s[o.animType] = o.options.vertical === !1 ? "translate3d(" + i + "px, 0px, 0px)" : "translate3d(0px," + i + "px, 0px)", o.$slideTrack.css(s), t && setTimeout(function () {
            o.disableTransition(), t.call()
        }, o.options.speed))
    }, i.prototype.asNavFor = function (i) {
        var t = this,
            s = null !== t.options.asNavFor ? e(t.options.asNavFor).slick("getSlick") : null;
        null !== s && s.slideHandler(i, !0)
    }, i.prototype.applyTransition = function (e) {
        var i = this,
            t = {};
        t[i.transitionType] = i.options.fade === !1 ? i.transformType + " " + i.options.speed + "ms " + i.options.cssEase : "opacity " + i.options.speed + "ms " + i.options.cssEase, i.options.fade === !1 ? i.$slideTrack.css(t) : i.$slides.eq(e).css(t)
    }, i.prototype.autoPlay = function () {
        var e = this;
        e.autoPlayTimer && clearInterval(e.autoPlayTimer), e.slideCount > e.options.slidesToShow && e.paused !== !0 && (e.autoPlayTimer = setInterval(e.autoPlayIterator, e.options.autoplaySpeed))
    }, i.prototype.autoPlayClear = function () {
        var e = this;
        e.autoPlayTimer && clearInterval(e.autoPlayTimer)
    }, i.prototype.autoPlayIterator = function () {
        var e = this;
        e.options.infinite === !1 ? 1 === e.direction ? (e.currentSlide + 1 === e.slideCount - 1 && (e.direction = 0), e.slideHandler(e.currentSlide + e.options.slidesToScroll)) : (e.currentSlide - 1 === 0 && (e.direction = 1), e.slideHandler(e.currentSlide - e.options.slidesToScroll)) : e.slideHandler(e.currentSlide + e.options.slidesToScroll)
    }, i.prototype.buildArrows = function () {
        var i = this;
        i.options.arrows === !0 && i.slideCount > i.options.slidesToShow && (i.$prevArrow = e(i.options.prevArrow), i.$nextArrow = e(i.options.nextArrow), i.htmlExpr.test(i.options.prevArrow) && i.$prevArrow.appendTo(i.options.appendArrows), i.htmlExpr.test(i.options.nextArrow) && i.$nextArrow.appendTo(i.options.appendArrows), i.options.infinite !== !0 && i.$prevArrow.addClass("slick-disabled"))
    }, i.prototype.buildDots = function () {
        var t, s, i = this;
        if (i.options.dots === !0 && i.slideCount > i.options.slidesToShow) {
            for (s = '<ul class="' + i.options.dotsClass + '">', t = 0; t <= i.getDotCount(); t += 1) s += "<li>" + i.options.customPaging.call(this, i, t) + "</li>";
            s += "</ul>", i.$dots = e(s).appendTo(i.options.appendDots), i.$dots.find("li").first().addClass("slick-active").attr("aria-hidden", "false")
        }
    }, i.prototype.buildOut = function () {
        var i = this;
        i.$slides = i.$slider.children(":not(.slick-cloned)").addClass("slick-slide"), i.slideCount = i.$slides.length, i.$slides.each(function (i, t) {
            e(t).attr("data-slick-index", i)
        }), i.$slidesCache = i.$slides, i.$slider.addClass("slick-slider"), i.$slideTrack = 0 === i.slideCount ? e('<div class="slick-track"/>').appendTo(i.$slider) : i.$slides.wrapAll('<div class="slick-track"/>').parent(), i.$list = i.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(), i.$slideTrack.css("opacity", 0), (i.options.centerMode === !0 || i.options.swipeToSlide === !0) && (i.options.slidesToScroll = 1), e("img[data-lazy]", i.$slider).not("[src]").addClass("slick-loading"), i.setupInfinite(), i.buildArrows(), i.buildDots(), i.updateDots(), i.options.accessibility === !0 && i.$list.prop("tabIndex", 0), i.setSlideClasses("number" == typeof this.currentSlide ? this.currentSlide : 0), i.options.draggable === !0 && i.$list.addClass("draggable")
    }, i.prototype.buildRows = function () {
        var i, t, s, o, n, l, r, e = this;
        if (o = document.createDocumentFragment(), l = e.$slider.children(), e.options.rows > 1) {
            for (r = e.options.slidesPerRow * e.options.rows, n = Math.ceil(l.length / r), i = 0; n > i; i++) {
                var a = document.createElement("div");
                for (t = 0; t < e.options.rows; t++) {
                    var d = document.createElement("div");
                    for (s = 0; s < e.options.slidesPerRow; s++) {
                        var c = i * r + (t * e.options.slidesPerRow + s);
                        l.get(c) && d.appendChild(l.get(c))
                    }
                    a.appendChild(d)
                }
                o.appendChild(a)
            }
            e.$slider.html(o), e.$slider.children().children().children().width(100 / e.options.slidesPerRow + "%").css({
                display: "inline-block"
            })
        }
    }, i.prototype.checkResponsive = function (i) {
        var s, o, n, t = this,
            l = t.$slider.width(),
            r = window.innerWidth || e(window).width();
        if ("window" === t.respondTo ? n = r : "slider" === t.respondTo ? n = l : "min" === t.respondTo && (n = Math.min(r, l)), t.originalSettings.responsive && t.originalSettings.responsive.length > -1 && null !== t.originalSettings.responsive) {
            o = null;
            for (s in t.breakpoints) t.breakpoints.hasOwnProperty(s) && (t.originalSettings.mobileFirst === !1 ? n < t.breakpoints[s] && (o = t.breakpoints[s]) : n > t.breakpoints[s] && (o = t.breakpoints[s]));
            null !== o ? null !== t.activeBreakpoint ? o !== t.activeBreakpoint && (t.activeBreakpoint = o, "unslick" === t.breakpointSettings[o] ? t.unslick() : (t.options = e.extend({}, t.originalSettings, t.breakpointSettings[o]), i === !0 && (t.currentSlide = t.options.initialSlide), t.refresh())) : (t.activeBreakpoint = o, "unslick" === t.breakpointSettings[o] ? t.unslick() : (t.options = e.extend({}, t.originalSettings, t.breakpointSettings[o]), i === !0 && (t.currentSlide = t.options.initialSlide), t.refresh())) : null !== t.activeBreakpoint && (t.activeBreakpoint = null, t.options = t.originalSettings, i === !0 && (t.currentSlide = t.options.initialSlide), t.refresh())
        }
    }, i.prototype.changeSlide = function (i, t) {
        var n, l, r, s = this,
            o = e(i.target);
        switch (o.is("a") && i.preventDefault(), r = s.slideCount % s.options.slidesToScroll !== 0, n = r ? 0 : (s.slideCount - s.currentSlide) % s.options.slidesToScroll, i.data.message) {
            case "previous":
                l = 0 === n ? s.options.slidesToScroll : s.options.slidesToShow - n, s.slideCount > s.options.slidesToShow && s.slideHandler(s.currentSlide - l, !1, t);
                break;
            case "next":
                l = 0 === n ? s.options.slidesToScroll : n, s.slideCount > s.options.slidesToShow && s.slideHandler(s.currentSlide + l, !1, t);
                break;
            case "index":
                var a = 0 === i.data.index ? 0 : i.data.index || e(i.target).parent().index() * s.options.slidesToScroll;
                s.slideHandler(s.checkNavigable(a), !1, t);
                break;
            default:
                return
        }
    }, i.prototype.checkNavigable = function (e) {
        var t, s, i = this;
        if (t = i.getNavigableIndexes(), s = 0, e > t[t.length - 1]) e = t[t.length - 1];
        else
            for (var o in t) {
                if (e < t[o]) {
                    e = s;
                    break
                }
                s = t[o]
            }
        return e
    }, i.prototype.cleanUpEvents = function () {
        var i = this;
        i.options.dots === !0 && i.slideCount > i.options.slidesToShow && e("li", i.$dots).off("click.slick", i.changeSlide), i.options.dots === !0 && i.options.pauseOnDotsHover === !0 && i.options.autoplay === !0 && e("li", i.$dots).off("mouseenter.slick", i.setPaused.bind(i, !0)).off("mouseleave.slick", i.setPaused.bind(i, !1)), i.options.arrows === !0 && i.slideCount > i.options.slidesToShow && (i.$prevArrow && i.$prevArrow.off("click.slick", i.changeSlide), i.$nextArrow && i.$nextArrow.off("click.slick", i.changeSlide)), i.$list.off("touchstart.slick mousedown.slick", i.swipeHandler), i.$list.off("touchmove.slick mousemove.slick", i.swipeHandler), i.$list.off("touchend.slick mouseup.slick", i.swipeHandler), i.$list.off("touchcancel.slick mouseleave.slick", i.swipeHandler), i.$list.off("click.slick", i.clickHandler), i.options.autoplay === !0 && e(document).off(i.visibilityChange, i.visibility), i.$list.off("mouseenter.slick", i.setPaused.bind(i, !0)), i.$list.off("mouseleave.slick", i.setPaused.bind(i, !1)), i.options.accessibility === !0 && i.$list.off("keydown.slick", i.keyHandler), i.options.focusOnSelect === !0 && e(i.$slideTrack).children().off("click.slick", i.selectHandler), e(window).off("orientationchange.slick.slick-" + i.instanceUid, i.orientationChange), e(window).off("resize.slick.slick-" + i.instanceUid, i.resize), e("[draggable!=true]", i.$slideTrack).off("dragstart", i.preventDefault), e(window).off("load.slick.slick-" + i.instanceUid, i.setPosition), e(document).off("ready.slick.slick-" + i.instanceUid, i.setPosition)
    }, i.prototype.cleanUpRows = function () {
        var i, e = this;
        e.options.rows > 1 && (i = e.$slides.children().children(), i.removeAttr("style"), e.$slider.html(i))
    }, i.prototype.clickHandler = function (e) {
        var i = this;
        i.shouldClick === !1 && (e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault())
    }, i.prototype.destroy = function () {
        var i = this;
        i.autoPlayClear(), i.touchObject = {}, i.cleanUpEvents(), e(".slick-cloned", i.$slider).remove(), i.$dots && i.$dots.remove(), i.$prevArrow && "object" != typeof i.options.prevArrow && i.$prevArrow.remove(), i.$nextArrow && "object" != typeof i.options.nextArrow && i.$nextArrow.remove(), i.$slides && (i.$slides.removeClass("slick-slide slick-active slick-center slick-visible").attr("aria-hidden", "true").removeAttr("data-slick-index").css({
            position: "",
            left: "",
            top: "",
            zIndex: "",
            opacity: "",
            width: ""
        }), i.$slider.html(i.$slides)), i.cleanUpRows(), i.$slider.removeClass("slick-slider"), i.$slider.removeClass("slick-initialized")
    }, i.prototype.disableTransition = function (e) {
        var i = this,
            t = {};
        t[i.transitionType] = "", i.options.fade === !1 ? i.$slideTrack.css(t) : i.$slides.eq(e).css(t)
    }, i.prototype.fadeSlide = function (e, i) {
        var t = this;
        t.cssTransitions === !1 ? (t.$slides.eq(e).css({
            zIndex: 1e3
        }), t.$slides.eq(e).animate({
            opacity: 1
        }, t.options.speed, t.options.easing, i)) : (t.applyTransition(e), t.$slides.eq(e).css({
            opacity: 1,
            zIndex: 1e3
        }), i && setTimeout(function () {
            t.disableTransition(e), i.call()
        }, t.options.speed))
    }, i.prototype.filterSlides = i.prototype.slickFilter = function (e) {
        var i = this;
        null !== e && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), i.$slidesCache.filter(e).appendTo(i.$slideTrack), i.reinit())
    }, i.prototype.getCurrent = i.prototype.slickCurrentSlide = function () {
        var e = this;
        return e.currentSlide
    }, i.prototype.getDotCount = function () {
        var e = this,
            i = 0,
            t = 0,
            s = 0;
        if (e.options.infinite === !0) s = Math.ceil(e.slideCount / e.options.slidesToScroll);
        else if (e.options.centerMode === !0) s = e.slideCount;
        else
            for (; i < e.slideCount;) ++s, i = t + e.options.slidesToShow, t += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
        return s - 1
    }, i.prototype.getLeft = function (e) {
        var t, s, n, i = this,
            o = 0;
        return i.slideOffset = 0, s = i.$slides.first().outerHeight(), i.options.infinite === !0 ? (i.slideCount > i.options.slidesToShow && (i.slideOffset = i.slideWidth * i.options.slidesToShow * -1, o = s * i.options.slidesToShow * -1), i.slideCount % i.options.slidesToScroll !== 0 && e + i.options.slidesToScroll > i.slideCount && i.slideCount > i.options.slidesToShow && (e > i.slideCount ? (i.slideOffset = (i.options.slidesToShow - (e - i.slideCount)) * i.slideWidth * -1, o = (i.options.slidesToShow - (e - i.slideCount)) * s * -1) : (i.slideOffset = i.slideCount % i.options.slidesToScroll * i.slideWidth * -1, o = i.slideCount % i.options.slidesToScroll * s * -1))) : e + i.options.slidesToShow > i.slideCount && (i.slideOffset = (e + i.options.slidesToShow - i.slideCount) * i.slideWidth, o = (e + i.options.slidesToShow - i.slideCount) * s), i.slideCount <= i.options.slidesToShow && (i.slideOffset = 0, o = 0), i.options.centerMode === !0 && i.options.infinite === !0 ? i.slideOffset += i.slideWidth * Math.floor(i.options.slidesToShow / 2) - i.slideWidth : i.options.centerMode === !0 && (i.slideOffset = 0, i.slideOffset += i.slideWidth * Math.floor(i.options.slidesToShow / 2)), t = i.options.vertical === !1 ? e * i.slideWidth * -1 + i.slideOffset : e * s * -1 + o, i.options.variableWidth === !0 && (n = i.$slideTrack.children(".slick-slide").eq(i.slideCount <= i.options.slidesToShow || i.options.infinite === !1 ? e : e + i.options.slidesToShow), t = n[0] ? -1 * n[0].offsetLeft : 0, i.options.centerMode === !0 && (n = i.$slideTrack.children(".slick-slide").eq(i.options.infinite === !1 ? e : e + i.options.slidesToShow + 1), t = n[0] ? -1 * n[0].offsetLeft : 0, t += (i.$list.width() - n.outerWidth()) / 2)), t
    }, i.prototype.getOption = i.prototype.slickGetOption = function (e) {
        var i = this;
        return i.options[e]
    }, i.prototype.getNavigableIndexes = function () {
        var o, e = this,
            i = 0,
            t = 0,
            s = [];
        for (e.options.infinite === !1 ? (o = e.slideCount - e.options.slidesToShow + 1, e.options.centerMode === !0 && (o = e.slideCount)) : (i = -1 * e.options.slidesToScroll, t = -1 * e.options.slidesToScroll, o = 2 * e.slideCount); o > i;) s.push(i), i = t + e.options.slidesToScroll, t += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
        return s
    }, i.prototype.getSlick = function () {
        return this
    }, i.prototype.getSlideCount = function () {
        var t, s, o, i = this;
        return o = i.options.centerMode === !0 ? i.slideWidth * Math.floor(i.options.slidesToShow / 2) : 0, i.options.swipeToSlide === !0 ? (i.$slideTrack.find(".slick-slide").each(function (t, n) {
            return n.offsetLeft - o + e(n).outerWidth() / 2 > -1 * i.swipeLeft ? (s = n, !1) : void 0
        }), t = Math.abs(e(s).attr("data-slick-index") - i.currentSlide) || 1) : i.options.slidesToScroll
    }, i.prototype.goTo = i.prototype.slickGoTo = function (e, i) {
        var t = this;
        t.changeSlide({
            data: {
                message: "index",
                index: parseInt(e)
            }
        }, i)
    }, i.prototype.init = function () {
        var i = this;
        e(i.$slider).hasClass("slick-initialized") || (e(i.$slider).addClass("slick-initialized"), i.buildRows(), i.buildOut(), i.setProps(), i.startLoad(), i.loadSlider(), i.initializeEvents(), i.updateArrows(), i.updateDots()), i.$slider.trigger("init", [i])
    }, i.prototype.initArrowEvents = function () {
        var e = this;
        e.options.arrows === !0 && e.slideCount > e.options.slidesToShow && (e.$prevArrow.on("click.slick", {
            message: "previous"
        }, e.changeSlide), e.$nextArrow.on("click.slick", {
            message: "next"
        }, e.changeSlide))
    }, i.prototype.initDotEvents = function () {
        var i = this;
        i.options.dots === !0 && i.slideCount > i.options.slidesToShow && e("li", i.$dots).on("click.slick", {
            message: "index"
        }, i.changeSlide), i.options.dots === !0 && i.options.pauseOnDotsHover === !0 && i.options.autoplay === !0 && e("li", i.$dots).on("mouseenter.slick", i.setPaused.bind(i, !0)).on("mouseleave.slick", i.setPaused.bind(i, !1))
    }, i.prototype.initializeEvents = function () {
        var i = this;
        i.initArrowEvents(), i.initDotEvents(), i.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, i.swipeHandler), i.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, i.swipeHandler), i.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, i.swipeHandler), i.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, i.swipeHandler), i.$list.on("click.slick", i.clickHandler), i.options.autoplay === !0 && e(document).on(i.visibilityChange, i.visibility.bind(i)), i.$list.on("mouseenter.slick", i.setPaused.bind(i, !0)), i.$list.on("mouseleave.slick", i.setPaused.bind(i, !1)), i.options.accessibility === !0 && i.$list.on("keydown.slick", i.keyHandler), i.options.focusOnSelect === !0 && e(i.$slideTrack).children().on("click.slick", i.selectHandler), e(window).on("orientationchange.slick.slick-" + i.instanceUid, i.orientationChange.bind(i)), e(window).on("resize.slick.slick-" + i.instanceUid, i.resize.bind(i)), e("[draggable!=true]", i.$slideTrack).on("dragstart", i.preventDefault), e(window).on("load.slick.slick-" + i.instanceUid, i.setPosition), e(document).on("ready.slick.slick-" + i.instanceUid, i.setPosition)
    }, i.prototype.initUI = function () {
        var e = this;
        e.options.arrows === !0 && e.slideCount > e.options.slidesToShow && (e.$prevArrow.show(), e.$nextArrow.show()), e.options.dots === !0 && e.slideCount > e.options.slidesToShow && e.$dots.show(), e.options.autoplay === !0 && e.autoPlay()
    }, i.prototype.keyHandler = function (e) {
        var i = this;
        37 === e.keyCode && i.options.accessibility === !0 ? i.changeSlide({
            data: {
                message: "previous"
            }
        }) : 39 === e.keyCode && i.options.accessibility === !0 && i.changeSlide({
            data: {
                message: "next"
            }
        })
    }, i.prototype.lazyLoad = function () {
        function l(i) {
            e("img[data-lazy]", i).each(function () {
                var i = e(this),
                    t = e(this).attr("data-lazy"),
                    s = document.createElement("img");
                s.onload = function () {
                    i.animate({
                        opacity: 1
                    }, 200)
                }, s.src = t, i.css({
                    opacity: 0
                }).attr("src", t).removeAttr("data-lazy").removeClass("slick-loading")
            })
        }
        var t, s, o, n, i = this;
        i.options.centerMode === !0 ? i.options.infinite === !0 ? (o = i.currentSlide + (i.options.slidesToShow / 2 + 1), n = o + i.options.slidesToShow + 2) : (o = Math.max(0, i.currentSlide - (i.options.slidesToShow / 2 + 1)), n = 2 + (i.options.slidesToShow / 2 + 1) + i.currentSlide) : (o = i.options.infinite ? i.options.slidesToShow + i.currentSlide : i.currentSlide, n = o + i.options.slidesToShow, i.options.fade === !0 && (o > 0 && o--, n <= i.slideCount && n++)), t = i.$slider.find(".slick-slide").slice(o, n), l(t), i.slideCount <= i.options.slidesToShow ? (s = i.$slider.find(".slick-slide"), l(s)) : i.currentSlide >= i.slideCount - i.options.slidesToShow ? (s = i.$slider.find(".slick-cloned").slice(0, i.options.slidesToShow), l(s)) : 0 === i.currentSlide && (s = i.$slider.find(".slick-cloned").slice(-1 * i.options.slidesToShow), l(s))
    }, i.prototype.loadSlider = function () {
        var e = this;
        e.setPosition(), e.$slideTrack.css({
            opacity: 1
        }), e.$slider.removeClass("slick-loading"), e.initUI(), "progressive" === e.options.lazyLoad && e.progressiveLazyLoad()
    }, i.prototype.next = i.prototype.slickNext = function () {
        var e = this;
        e.changeSlide({
            data: {
                message: "next"
            }
        })
    }, i.prototype.orientationChange = function () {
        var e = this;
        e.checkResponsive(), e.setPosition()
    }, i.prototype.pause = i.prototype.slickPause = function () {
        var e = this;
        e.autoPlayClear(), e.paused = !0
    }, i.prototype.play = i.prototype.slickPlay = function () {
        var e = this;
        e.paused = !1, e.autoPlay()
    }, i.prototype.postSlide = function (e) {
        var i = this;
        i.$slider.trigger("afterChange", [i, e]), i.animating = !1, i.setPosition(), i.swipeLeft = null, i.options.autoplay === !0 && i.paused === !1 && i.autoPlay()
    }, i.prototype.prev = i.prototype.slickPrev = function () {
        var e = this;
        e.changeSlide({
            data: {
                message: "previous"
            }
        })
    }, i.prototype.preventDefault = function (e) {
        e.preventDefault()
    }, i.prototype.progressiveLazyLoad = function () {
        var t, s, i = this;
        t = e("img[data-lazy]", i.$slider).length, t > 0 && (s = e("img[data-lazy]", i.$slider).first(), s.attr("src", s.attr("data-lazy")).removeClass("slick-loading").load(function () {
            s.removeAttr("data-lazy"), i.progressiveLazyLoad(), i.options.adaptiveHeight === !0 && i.setPosition()
        }).error(function () {
            s.removeAttr("data-lazy"), i.progressiveLazyLoad()
        }))
    }, i.prototype.refresh = function () {
        var i = this,
            t = i.currentSlide;
        i.destroy(), e.extend(i, i.initials), i.init(), i.changeSlide({
            data: {
                message: "index",
                index: t
            }
        }, !1)
    }, i.prototype.reinit = function () {
        var i = this;
        i.$slides = i.$slideTrack.children(i.options.slide).addClass("slick-slide"), i.slideCount = i.$slides.length, i.currentSlide >= i.slideCount && 0 !== i.currentSlide && (i.currentSlide = i.currentSlide - i.options.slidesToScroll), i.slideCount <= i.options.slidesToShow && (i.currentSlide = 0), i.setProps(), i.setupInfinite(), i.buildArrows(), i.updateArrows(), i.initArrowEvents(), i.buildDots(), i.updateDots(), i.initDotEvents(), i.options.focusOnSelect === !0 && e(i.$slideTrack).children().on("click.slick", i.selectHandler), i.setSlideClasses(0), i.setPosition(), i.$slider.trigger("reInit", [i])
    }, i.prototype.resize = function () {
        var i = this;
        e(window).width() !== i.windowWidth && (clearTimeout(i.windowDelay), i.windowDelay = window.setTimeout(function () {
            i.windowWidth = e(window).width(), i.checkResponsive(), i.setPosition()
        }, 50))
    }, i.prototype.removeSlide = i.prototype.slickRemove = function (e, i, t) {
        var s = this;
        return "boolean" == typeof e ? (i = e, e = i === !0 ? 0 : s.slideCount - 1) : e = i === !0 ? --e : e, s.slideCount < 1 || 0 > e || e > s.slideCount - 1 ? !1 : (s.unload(), t === !0 ? s.$slideTrack.children().remove() : s.$slideTrack.children(this.options.slide).eq(e).remove(), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slidesCache = s.$slides, void s.reinit())
    }, i.prototype.setCSS = function (e) {
        var s, o, i = this,
            t = {};
        i.options.rtl === !0 && (e = -e), s = "left" == i.positionProp ? Math.ceil(e) + "px" : "0px", o = "top" == i.positionProp ? Math.ceil(e) + "px" : "0px", t[i.positionProp] = e, i.transformsEnabled === !1 ? i.$slideTrack.css(t) : (t = {}, i.cssTransitions === !1 ? (t[i.animType] = "translate(" + s + ", " + o + ")", i.$slideTrack.css(t)) : (t[i.animType] = "translate3d(" + s + ", " + o + ", 0px)", i.$slideTrack.css(t)))
    }, i.prototype.setDimensions = function () {
        var e = this;
        e.options.vertical === !1 ? e.options.centerMode === !0 && e.$list.css({
            padding: "0px " + e.options.centerPadding
        }) : (e.$list.height(e.$slides.first().outerHeight(!0) * e.options.slidesToShow), e.options.centerMode === !0 && e.$list.css({
            padding: e.options.centerPadding + " 0px"
        })), e.listWidth = e.$list.width(), e.listHeight = e.$list.height(), e.options.vertical === !1 && e.options.variableWidth === !1 ? (e.slideWidth = Math.ceil(e.listWidth / e.options.slidesToShow), e.$slideTrack.width(Math.ceil(e.slideWidth * e.$slideTrack.children(".slick-slide").length))) : e.options.variableWidth === !0 ? e.$slideTrack.width(5e3 * e.slideCount) : (e.slideWidth = Math.ceil(e.listWidth), e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0) * e.$slideTrack.children(".slick-slide").length)));
        var i = e.$slides.first().outerWidth(!0) - e.$slides.first().width();
        e.options.variableWidth === !1 && e.$slideTrack.children(".slick-slide").width(e.slideWidth - i)
    }, i.prototype.setFade = function () {
        var t, i = this;
        i.$slides.each(function (s, o) {
            t = i.slideWidth * s * -1, e(o).css(i.options.rtl === !0 ? {
                position: "relative",
                right: t,
                top: 0,
                zIndex: 800,
                opacity: 0
            } : {
                position: "relative",
                left: t,
                top: 0,
                zIndex: 800,
                opacity: 0
            })
        }), i.$slides.eq(i.currentSlide).css({
            zIndex: 900,
            opacity: 1
        })
    }, i.prototype.setHeight = function () {
        var e = this;
        if (1 === e.options.slidesToShow && e.options.adaptiveHeight === !0 && e.options.vertical === !1) {
            var i = e.$slides.eq(e.currentSlide).outerHeight(!0);
            e.$list.css("height", i)
        }
    }, i.prototype.setOption = i.prototype.slickSetOption = function (e, i, t) {
        var s = this;
        s.options[e] = i, t === !0 && (s.unload(), s.reinit())
    }, i.prototype.setPosition = function () {
        var e = this;
        e.setDimensions(), e.setHeight(), e.options.fade === !1 ? e.setCSS(e.getLeft(e.currentSlide)) : e.setFade(), e.$slider.trigger("setPosition", [e])
    }, i.prototype.setProps = function () {
        var e = this,
            i = document.body.style;
        e.positionProp = e.options.vertical === !0 ? "top" : "left", "top" === e.positionProp ? e.$slider.addClass("slick-vertical") : e.$slider.removeClass("slick-vertical"), (void 0 !== i.WebkitTransition || void 0 !== i.MozTransition || void 0 !== i.msTransition) && e.options.useCSS === !0 && (e.cssTransitions = !0), void 0 !== i.OTransform && (e.animType = "OTransform", e.transformType = "-o-transform", e.transitionType = "OTransition", void 0 === i.perspectiveProperty && void 0 === i.webkitPerspective && (e.animType = !1)), void 0 !== i.MozTransform && (e.animType = "MozTransform", e.transformType = "-moz-transform", e.transitionType = "MozTransition", void 0 === i.perspectiveProperty && void 0 === i.MozPerspective && (e.animType = !1)), void 0 !== i.webkitTransform && (e.animType = "webkitTransform", e.transformType = "-webkit-transform", e.transitionType = "webkitTransition", void 0 === i.perspectiveProperty && void 0 === i.webkitPerspective && (e.animType = !1)), void 0 !== i.msTransform && (e.animType = "msTransform", e.transformType = "-ms-transform", e.transitionType = "msTransition", void 0 === i.msTransform && (e.animType = !1)), void 0 !== i.transform && e.animType !== !1 && (e.animType = "transform", e.transformType = "transform", e.transitionType = "transition"), e.transformsEnabled = null !== e.animType && e.animType !== !1
    }, i.prototype.setSlideClasses = function (e) {
        var t, s, o, n, i = this;
        i.$slider.find(".slick-slide").removeClass("slick-active").attr("aria-hidden", "true").removeClass("slick-center"), s = i.$slider.find(".slick-slide"), i.options.centerMode === !0 ? (t = Math.floor(i.options.slidesToShow / 2), i.options.infinite === !0 && (e >= t && e <= i.slideCount - 1 - t ? i.$slides.slice(e - t, e + t + 1).addClass("slick-active").attr("aria-hidden", "false") : (o = i.options.slidesToShow + e, s.slice(o - t + 1, o + t + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === e ? s.eq(s.length - 1 - i.options.slidesToShow).addClass("slick-center") : e === i.slideCount - 1 && s.eq(i.options.slidesToShow).addClass("slick-center")), i.$slides.eq(e).addClass("slick-center")) : e >= 0 && e <= i.slideCount - i.options.slidesToShow ? i.$slides.slice(e, e + i.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : s.length <= i.options.slidesToShow ? s.addClass("slick-active").attr("aria-hidden", "false") : (n = i.slideCount % i.options.slidesToShow, o = i.options.infinite === !0 ? i.options.slidesToShow + e : e, i.options.slidesToShow == i.options.slidesToScroll && i.slideCount - e < i.options.slidesToShow ? s.slice(o - (i.options.slidesToShow - n), o + n).addClass("slick-active").attr("aria-hidden", "false") : s.slice(o, o + i.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), "ondemand" === i.options.lazyLoad && i.lazyLoad()
    }, i.prototype.setupInfinite = function () {
        var t, s, o, i = this;
        if (i.options.fade === !0 && (i.options.centerMode = !1), i.options.infinite === !0 && i.options.fade === !1 && (s = null, i.slideCount > i.options.slidesToShow)) {
            for (o = i.options.centerMode === !0 ? i.options.slidesToShow + 1 : i.options.slidesToShow, t = i.slideCount; t > i.slideCount - o; t -= 1) s = t - 1, e(i.$slides[s]).clone(!0).attr("id", "").attr("data-slick-index", s - i.slideCount).prependTo(i.$slideTrack).addClass("slick-cloned");
            for (t = 0; o > t; t += 1) s = t, e(i.$slides[s]).clone(!0).attr("id", "").attr("data-slick-index", s + i.slideCount).appendTo(i.$slideTrack).addClass("slick-cloned");
            i.$slideTrack.find(".slick-cloned").find("[id]").each(function () {
                e(this).attr("id", "")
            })
        }
    }, i.prototype.setPaused = function (e) {
        var i = this;
        i.options.autoplay === !0 && i.options.pauseOnHover === !0 && (i.paused = e, i.autoPlayClear())
    }, i.prototype.selectHandler = function (i) {
        var t = this,
            s = e(i.target).is(".slick-slide") ? e(i.target) : e(i.target).parents(".slick-slide"),
            o = parseInt(s.attr("data-slick-index"));
        return o || (o = 0), t.slideCount <= t.options.slidesToShow ? (t.$slider.find(".slick-slide").removeClass("slick-active").attr("aria-hidden", "true"), t.$slides.eq(o).addClass("slick-active").attr("aria-hidden", "false"), t.options.centerMode === !0 && (t.$slider.find(".slick-slide").removeClass("slick-center"), t.$slides.eq(o).addClass("slick-center")), void t.asNavFor(o)) : void t.slideHandler(o)
    }, i.prototype.slideHandler = function (e, i, t) {
        var s, o, n, l, r = null,
            a = this;
        return i = i || !1, a.animating === !0 && a.options.waitForAnimate === !0 || a.options.fade === !0 && a.currentSlide === e || a.slideCount <= a.options.slidesToShow ? void 0 : (i === !1 && a.asNavFor(e), s = e, r = a.getLeft(s), l = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? l : a.swipeLeft, a.options.infinite === !1 && a.options.centerMode === !1 && (0 > e || e > a.getDotCount() * a.options.slidesToScroll) ? void(a.options.fade === !1 && (s = a.currentSlide, t !== !0 ? a.animateSlide(l, function () {
            a.postSlide(s)
        }) : a.postSlide(s))) : a.options.infinite === !1 && a.options.centerMode === !0 && (0 > e || e > a.slideCount - a.options.slidesToScroll) ? void(a.options.fade === !1 && (s = a.currentSlide, t !== !0 ? a.animateSlide(l, function () {
            a.postSlide(s)
        }) : a.postSlide(s))) : (a.options.autoplay === !0 && clearInterval(a.autoPlayTimer), o = 0 > s ? a.slideCount % a.options.slidesToScroll !== 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + s : s >= a.slideCount ? a.slideCount % a.options.slidesToScroll !== 0 ? 0 : s - a.slideCount : s, a.animating = !0, a.$slider.trigger("beforeChange", [a, a.currentSlide, o]), n = a.currentSlide, a.currentSlide = o, a.setSlideClasses(a.currentSlide), a.updateDots(), a.updateArrows(), a.options.fade === !0 ? (t !== !0 ? a.fadeSlide(o, function () {
            a.postSlide(o)
        }) : a.postSlide(o), void a.animateHeight()) : void(t !== !0 ? a.animateSlide(r, function () {
            a.postSlide(o)
        }) : a.postSlide(o))))
    }, i.prototype.startLoad = function () {
        var e = this;
        e.options.arrows === !0 && e.slideCount > e.options.slidesToShow && (e.$prevArrow.hide(), e.$nextArrow.hide()), e.options.dots === !0 && e.slideCount > e.options.slidesToShow && e.$dots.hide(), e.$slider.addClass("slick-loading")
    }, i.prototype.swipeDirection = function () {
        var e, i, t, s, o = this;
        return e = o.touchObject.startX - o.touchObject.curX, i = o.touchObject.startY - o.touchObject.curY, t = Math.atan2(i, e), s = Math.round(180 * t / Math.PI), 0 > s && (s = 360 - Math.abs(s)), 45 >= s && s >= 0 ? o.options.rtl === !1 ? "left" : "right" : 360 >= s && s >= 315 ? o.options.rtl === !1 ? "left" : "right" : s >= 135 && 225 >= s ? o.options.rtl === !1 ? "right" : "left" : o.options.verticalSwiping === !0 ? s >= 35 && 135 >= s ? "left" : "right" : "vertical"
    }, i.prototype.swipeEnd = function () {
        var t, i = this;
        if (i.dragging = !1, i.shouldClick = i.touchObject.swipeLength > 10 ? !1 : !0, void 0 === i.touchObject.curX) return !1;
        if (i.touchObject.edgeHit === !0 && i.$slider.trigger("edge", [i, i.swipeDirection()]), i.touchObject.swipeLength >= i.touchObject.minSwipe) switch (i.swipeDirection()) {
            case "left":
                t = i.options.swipeToSlide ? i.checkNavigable(i.currentSlide + i.getSlideCount()) : i.currentSlide + i.getSlideCount(), i.slideHandler(t), i.currentDirection = 0, i.touchObject = {}, i.$slider.trigger("swipe", [i, "left"]);
                break;
            case "right":
                t = i.options.swipeToSlide ? i.checkNavigable(i.currentSlide - i.getSlideCount()) : i.currentSlide - i.getSlideCount(), i.slideHandler(t), i.currentDirection = 1, i.touchObject = {}, i.$slider.trigger("swipe", [i, "right"])
        } else i.touchObject.startX !== i.touchObject.curX && (i.slideHandler(i.currentSlide), i.touchObject = {})
    }, i.prototype.swipeHandler = function (e) {
        var i = this;
        if (!(i.options.swipe === !1 || "ontouchend" in document && i.options.swipe === !1 || i.options.draggable === !1 && -1 !== e.type.indexOf("mouse"))) switch (i.touchObject.fingerCount = e.originalEvent && void 0 !== e.originalEvent.touches ? e.originalEvent.touches.length : 1, i.touchObject.minSwipe = i.listWidth / i.options.touchThreshold, i.options.verticalSwiping === !0 && (i.touchObject.minSwipe = i.listHeight / i.options.touchThreshold), e.data.action) {
            case "start":
                i.swipeStart(e);
                break;
            case "move":
                i.swipeMove(e);
                break;
            case "end":
                i.swipeEnd(e)
        }
    }, i.prototype.swipeMove = function (e) {
        var s, o, n, l, r, i = this;
        return r = void 0 !== e.originalEvent ? e.originalEvent.touches : null, !i.dragging || r && 1 !== r.length ? !1 : (s = i.getLeft(i.currentSlide), i.touchObject.curX = void 0 !== r ? r[0].pageX : e.clientX, i.touchObject.curY = void 0 !== r ? r[0].pageY : e.clientY, i.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(i.touchObject.curX - i.touchObject.startX, 2))), i.options.verticalSwiping === !0 && (i.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(i.touchObject.curY - i.touchObject.startY, 2)))), o = i.swipeDirection(), "vertical" !== o ? (void 0 !== e.originalEvent && i.touchObject.swipeLength > 4 && e.preventDefault(), l = (i.options.rtl === !1 ? 1 : -1) * (i.touchObject.curX > i.touchObject.startX ? 1 : -1), i.options.verticalSwiping === !0 && (l = i.touchObject.curY > i.touchObject.startY ? 1 : -1), n = i.touchObject.swipeLength, i.touchObject.edgeHit = !1, i.options.infinite === !1 && (0 === i.currentSlide && "right" === o || i.currentSlide >= i.getDotCount() && "left" === o) && (n = i.touchObject.swipeLength * i.options.edgeFriction, i.touchObject.edgeHit = !0), i.swipeLeft = i.options.vertical === !1 ? s + n * l : s + n * (i.$list.height() / i.listWidth) * l, i.options.verticalSwiping === !0 && (i.swipeLeft = s + n * l), i.options.fade === !0 || i.options.touchMove === !1 ? !1 : i.animating === !0 ? (i.swipeLeft = null, !1) : void i.setCSS(i.swipeLeft)) : void 0)
    }, i.prototype.swipeStart = function (e) {
        var t, i = this;
        return 1 !== i.touchObject.fingerCount || i.slideCount <= i.options.slidesToShow ? (i.touchObject = {}, !1) : (void 0 !== e.originalEvent && void 0 !== e.originalEvent.touches && (t = e.originalEvent.touches[0]), i.touchObject.startX = i.touchObject.curX = void 0 !== t ? t.pageX : e.clientX, i.touchObject.startY = i.touchObject.curY = void 0 !== t ? t.pageY : e.clientY, void(i.dragging = !0))
    }, i.prototype.unfilterSlides = i.prototype.slickUnfilter = function () {
        var e = this;
        null !== e.$slidesCache && (e.unload(), e.$slideTrack.children(this.options.slide).detach(), e.$slidesCache.appendTo(e.$slideTrack), e.reinit())
    }, i.prototype.unload = function () {
        var i = this;
        e(".slick-cloned", i.$slider).remove(), i.$dots && i.$dots.remove(), i.$prevArrow && "object" != typeof i.options.prevArrow && i.$prevArrow.remove(), i.$nextArrow && "object" != typeof i.options.nextArrow && i.$nextArrow.remove(), i.$slides.removeClass("slick-slide slick-active slick-visible").attr("aria-hidden", "true").css("width", "")
    }, i.prototype.unslick = function () {
        var e = this;
        e.destroy()
    }, i.prototype.updateArrows = function () {
        var i, e = this;
        i = Math.floor(e.options.slidesToShow / 2), e.options.arrows === !0 && e.options.infinite !== !0 && e.slideCount > e.options.slidesToShow && (e.$prevArrow.removeClass("slick-disabled"), e.$nextArrow.removeClass("slick-disabled"), 0 === e.currentSlide ? (e.$prevArrow.addClass("slick-disabled"), e.$nextArrow.removeClass("slick-disabled")) : e.currentSlide >= e.slideCount - e.options.slidesToShow && e.options.centerMode === !1 ? (e.$nextArrow.addClass("slick-disabled"), e.$prevArrow.removeClass("slick-disabled")) : e.currentSlide >= e.slideCount - 1 && e.options.centerMode === !0 && (e.$nextArrow.addClass("slick-disabled"), e.$prevArrow.removeClass("slick-disabled")))
    }, i.prototype.updateDots = function () {
        var e = this;
        null !== e.$dots && (e.$dots.find("li").removeClass("slick-active").attr("aria-hidden", "true"), e.$dots.find("li").eq(Math.floor(e.currentSlide / e.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden", "false"))
    }, i.prototype.visibility = function () {
        var e = this;
        document[e.hidden] ? (e.paused = !0, e.autoPlayClear()) : (e.paused = !1, e.autoPlay())
    }, e.fn.slick = function () {
        var l, e = this,
            t = arguments[0],
            s = Array.prototype.slice.call(arguments, 1),
            o = e.length,
            n = 0;
        for (n; o > n; n++)
            if ("object" == typeof t || "undefined" == typeof t ? e[n].slick = new i(e[n], t) : l = e[n].slick[t].apply(e[n].slick, s), "undefined" != typeof l) return l;
        return e
    }
});